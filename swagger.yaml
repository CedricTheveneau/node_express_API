openapi: 3.1.0
info:
  title: Api des essences de bois
  description: Une API pour gérer les données relatives aux essences de bois.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/api
paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Registration
      description: Create an account on API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "Jane"
                lastName:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  example: "jane@doe.com"
                password:
                  type: string
                  example: "azerty"
      responses:
        "201":
          description: Register successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 5
                  email:
                    type: string
                    format: email
                    example: jane@doe.com
                  password:
                    type: string
                    example: "$2b$10$0W2.Zf4w6q3CVeptjetyr.BMAcUONS3cV0sc2uVG0r616fG/XZG7K"
                  firstName:
                    type: string
                    example: Jane
                  lastName:
                    type: string
                    example: Doe
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2023-04-25T13:35:14.519Z"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2023-04-25T"
        "500":
          description: Missing some field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "notNull Violation: firstName is required"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Log in
      description: Log into an account on API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "jane@doe.com"
                password:
                  type: string
                  example: "azerty"
      responses:
        "200":
          description: Register successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzExMTAxMzEwLCJleHAiOjE3MTExMDQ5MTB9.dojdunpzzhtuw00k7YdWlJDThO4Vf2gmGs8Z81OhwDA"
                  id:
                    type: integer
                    example: 5
                  firstName:
                    type: string
                    example: "Jane"
                  lastName:
                    type: string
                    example: "Doe"
                  email:
                    type: string
                    format: email
                    example: "jane@doe.com"
                  password:
                    type: string
                    example: "$2b$10$0W2.Zf4w6q3CVeptjetyr.BMAcUONS3cV0sc2uVG0r616fG/XZG7K"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2023-04-25T13:35:14.519Z"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2023-04-25T"
        "500":
          description: Missing some field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "notNull Violation: firstName is required"
        "401":
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid password"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
  /woods/:
    post:
      tags:
        - Woods
      summary: Create Wood
      description: Create a new wood entry.
      consumes:
        - multipart/form-data
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                datas:
                  properties:
                    name:
                      type: string
                      example: "Épicéa"
                    type:
                      type: string
                      example: "softwood"
                    hardness:
                      type: string
                      example: "tender"
                image:
                  type: string
                  format: binary
                  description: Image of the wood
      responses:
        "201":
          description: Wood created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  wood:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: "Chêne"
                      type:
                        type: string
                        example: "noble and hardwoods"
                      hardness:
                        type: string
                        example: "hard"
                      image:
                        type: string
                        example: "http://localhost:5000/uploads/What-is-Jamstack_1711104145089.jpg"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2024-03-22T10:42:25.094Z"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-03-22T10:42:25.094Z"
        "500":
          description: An error occurred while creating a wood entry.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "notNull Violation: Name is required"
  /wood/{hardness}:
    get:
      tags:
        - Woods
      summary: Read Woods by Hardness
      description: Retrieve woods with a specific hardness.
      parameters:
        - in: path
          name: hardness
          description: Hardness of the wood to retrieve
          required: true
          type: string
      responses:
        "200":
          description: List of woods with the specified hardness.
          content:
            application/json:
              schema:
                type: object
                properties:
                  woods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Épicéa"
                        type:
                          type: string
                          example: "softwood"
                        hardness:
                          type: string
                          example: "tender"
                        image:
                          type: string
                          nullable: true
                          example: null
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-03-21T09:22:46.000Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2024-03-21T09:22:46.000Z"
        "500":
          description: An error occurred while retrieving woods by hardness.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while retrieving woods by hardness."
